import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
df = pd.read_csv("Advertising.csv")
df
# Rename the column 'Unnamed: 0' to 'Index'
df.rename(columns={'Unnamed: 0': 'Index'}, inplace=True)
df
#Preparing model

X = df.drop('Sales', axis=1)
y = df[["Sales"]]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=46)
# Linear Regression Model

lin_model = sm.ols(formula="Sales ~ TV + Radio + Newspaper", data=df).fit()

# Print the coefficients of the model

print(lin_model.params, "\n")
# Summary of the linear regression model

print(lin_model.summary())
# Evaluate the model

results = []
names = []
models = [('LinearRegression', LinearRegression())]
# Loop through each model, fit it to the data, and calculate the RMSE

for name, model in models:
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    result = np.sqrt(mean_squared_error(y_test, y_pred))
    results.append(result)
    names.append(name)
    msg = "%s: %f" % (name, result)
    print(msg)
# Make predictions on new data

new_data = pd.DataFrame({'TV': [110], 'Radio': [60], 'Newspaper': [20]})
predicted_sales = lin_model.predict(new_data)
print("Predicted Sales:", predicted_sales)